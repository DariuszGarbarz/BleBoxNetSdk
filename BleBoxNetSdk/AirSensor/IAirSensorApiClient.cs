using BleBoxModels.AirSensor.Enums;
using BleBoxModels.AirSensor.Models;
using BleBoxModels.Common.Enums;

namespace BleBoxNetSdk.AirSensor;

public interface IAirSensorApiClient
{
    /// <summary>
    /// Allows to force measurement immediately
    /// </summary>
    /// <param name="deviceAddress"></param>
    /// <param name="cancellationToken"></param>
    /// <exception cref="ArgumentNullException">Received json is null</exception>
    /// <exception cref="System.Text.Json.JsonException">Deserialization failed</exception>
    /// <exception cref="NotSupportedException">There is no compatible converter</exception>
    /// <exception cref="Exception">Request to API failed</exception>
    Task<Air?> ForceSensorMeasurement(Uri deviceAddress, CancellationToken cancellationToken = default);

    /// <summary>
    /// Returns information about sensors
    /// </summary>
    /// <param name="deviceAddress"></param>
    /// <param name="cancellationToken"></param>
    /// <exception cref="ArgumentNullException">Received json is null</exception>
    /// <exception cref="System.Text.Json.JsonException">Deserialization failed</exception>
    /// <exception cref="NotSupportedException">There is no compatible converter</exception>
    /// <exception cref="Exception">Request to API failed</exception>
    Task<Air?> GetDeviceState(Uri deviceAddress, CancellationToken cancellationToken = default);

    /// <summary>
    /// Returns extended information about sensors
    /// </summary>
    /// <param name="deviceAddress"></param>
    /// <param name="cancellationToken"></param>
    /// <exception cref="ArgumentNullException">Received json is null</exception>
    /// <exception cref="System.Text.Json.JsonException">Deserialization failed</exception>
    /// <exception cref="NotSupportedException">There is no compatible converter</exception>
    /// <exception cref="Exception">Request to API failed</exception>
    Task<Air?> GetExtendedDeviceState(Uri deviceAddress, CancellationToken cancellationToken = default);

    /// <summary>
    /// Returns information about run time of internal air quality sensor
    /// </summary>
    /// <param name="deviceAddress"></param>
    /// <param name="cancellationToken"></param>
    /// <exception cref="ArgumentNullException">Received json is null</exception>
    /// <exception cref="System.Text.Json.JsonException">Deserialization failed</exception>
    /// <exception cref="NotSupportedException">There is no compatible converter</exception>
    /// <exception cref="Exception">Request to API failed</exception>
    Task<Runtime?> GetSensorRuntime(Uri deviceAddress, CancellationToken cancellationToken = default);

    /// <summary>
    /// Return device's specific settings
    /// </summary>
    /// <param name="deviceAddress"></param>
    /// <param name="cancellationToken"></param>
    /// <exception cref="ArgumentNullException">Received json is null</exception>
    /// <exception cref="System.Text.Json.JsonException">Deserialization failed</exception>
    /// <exception cref="NotSupportedException">There is no compatible converter</exception>
    /// <exception cref="Exception">Request to API failed</exception>
    Task<Settings?> ReadSettings(Uri deviceAddress, CancellationToken cancellationToken = default);

    /// <summary>
    /// Allow to set device's specific settings
    /// </summary>
    /// <param name="deviceName">Name of BleBox device/controller</param>
    /// <param name="tunnelEnabled">Allows to enable or disable connection with the BleBox's cloud</param>
    /// <param name="tunnelLogEnabled">Decide whether events generated by this device should be log to the BleBox's cloud</param>
    /// <param name="statusLed">Allows to enable or disable extended status notification using built in LED</param>
    /// <param name="geolocation">Geolocation of airSensor on BleBox's Air Quality Map</param>
    /// <param name="mounting">Mounting place of airSensor</param>
    /// <param name="detailedView">Show details of air quality measurement</param>
    /// <param name="deviceAddress">Url to desired device</param>
    /// <param name="cancellationToken">Cancellation token</param>
    /// <exception cref="ArgumentNullException">Received json is null</exception>
    /// <exception cref="System.Text.Json.JsonException">Deserialization failed</exception>
    /// <exception cref="NotSupportedException">There is no compatible converter</exception>
    /// <exception cref="Exception">Request to API failed</exception>
    Task<Settings?> WriteSettings(
        string deviceName,
        Toggle tunnelEnabled,
        Toggle tunnelLogEnabled,
        Toggle statusLed,
        Geolocation geolocation,
        Mounting mounting,
        Toggle detailedView,
        Uri deviceAddress,
        CancellationToken cancellationToken = default);
}